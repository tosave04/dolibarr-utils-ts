import { z } from "zod"

// Sous-objet userassigned
const UserAssignedSchema = z.record(
	z
		.object({
			id: z.string(),
			mandatory: z.string(),
			answer_status: z.string(),
			transparency: z.string(),
		})
		.partial()
		.catchall(z.any())
)

export const AgendaEventSchema = z
	.object({
		id: z.string(),
		ref: z.string(),
		type_id: z.string(),
		type: z.string(),
		type_code: z.string(),
		type_label: z.unknown().nullable(),
		type_color: z.unknown().nullable(),
		type_picto: z.unknown().nullable(),
		code: z.string(),
		label: z.string(),
		datec: z.number(),
		duree: z.unknown().nullable(),
		datem: z.number(),
		authorid: z.string(),
		usermodid: z.string(),
		datep: z.number(),
		datef: z.unknown().nullable(),
		date_start_in_calendar: z.unknown().nullable(),
		date_end_in_calendar: z.unknown().nullable(),
		datep2: z.unknown().nullable(),
		durationp: z.number(),
		fulldayevent: z.string(),
		ponctuel: z.unknown().nullable(),
		percentage: z.string(),
		location: z.string(),
		transparency: z.string(),
		priority: z.string(),
		userassigned: UserAssignedSchema,
		userownerid: z.string(),
		socpeopleassigned: z.array(z.unknown()),
		otherassigned: z.array(z.unknown()),
		reminders: z.array(z.unknown()),
		socid: z.unknown().nullable(),
		elementid: z.unknown().nullable(),
		elementtype: z.unknown().nullable(),
		fk_bookcal_calendar: z.unknown().nullable(),
		icalname: z.unknown().nullable(),
		icalcolor: z.unknown().nullable(),
		extraparams: z.unknown().nullable(),
		email_msgid: z.unknown().nullable(),
		email_from: z.unknown().nullable(),
		email_sender: z.unknown().nullable(),
		email_to: z.unknown().nullable(),
		email_tocc: z.unknown().nullable(),
		email_tobcc: z.unknown().nullable(),
		email_subject: z.unknown().nullable(),
		errors_to: z.unknown().nullable(),
		num_vote: z.unknown().nullable(),
		event_paid: z.string(),
		status: z.string(),
		ip: z.unknown().nullable(),
		recurid: z.unknown().nullable(),
		recurrule: z.unknown().nullable(),
		recurdateend: z.unknown().nullable(),
		calling_duration: z.unknown().nullable(),
		module: z.unknown().nullable(),
		entity: z.string(),
		import_key: z.unknown().nullable(),
		array_options: z.array(z.unknown()),
		array_languages: z.array(z.unknown()).nullable(),
		contacts_ids: z.unknown().nullable(),
		linkedObjectsIds: z.unknown().nullable(),
		fk_project: z.unknown().nullable(),
		origin_type: z.unknown().nullable(),
		shipping_method: z.unknown().nullable(),
		fk_multicurrency: z.unknown().nullable(),
		multicurrency_code: z.unknown().nullable(),
		multicurrency_tx: z.unknown().nullable(),
		multicurrency_total_ht: z.unknown().nullable(),
		multicurrency_total_tva: z.unknown().nullable(),
		multicurrency_total_ttc: z.unknown().nullable(),
		multicurrency_total_localtax1: z.unknown().nullable(),
		multicurrency_total_localtax2: z.unknown().nullable(),
		last_main_doc: z.unknown().nullable(),
		note_public: z.unknown().nullable(),
		note_private: z.unknown().nullable(),
		actiontypecode: z.unknown().nullable(),
		date_creation: z.unknown().nullable(),
		date_validation: z.unknown().nullable(),
		date_modification: z.unknown().nullable(),
		tms: z.unknown().nullable(),
		date_cloture: z.unknown().nullable(),
		user_author: z.unknown().nullable(),
		user_creation: z.unknown().nullable(),
		user_creation_id: z.unknown().nullable(),
		user_valid: z.unknown().nullable(),
		user_validation: z.unknown().nullable(),
		user_validation_id: z.unknown().nullable(),
		user_closing_id: z.unknown().nullable(),
		user_modification: z.unknown().nullable(),
		user_modification_id: z.unknown().nullable(),
		fk_user_creat: z.unknown().nullable(),
		fk_user_modif: z.unknown().nullable(),
		specimen: z.number(),
		product: z.unknown().nullable(),
		cond_reglement_supplier_id: z.unknown().nullable(),
		deposit_percent: z.unknown().nullable(),
		retained_warranty_fk_cond_reglement: z.unknown().nullable(),
		warehouse_id: z.unknown().nullable(),
	})
	.partial() // toutes les clés deviennent facultatives (undefined autorisé)
	.catchall(z.any()) // tolère tous les champs supplémentaires

export interface AgendaEvent extends z.infer<typeof AgendaEventSchema> {}
