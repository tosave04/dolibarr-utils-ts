import { z } from "zod"

export const UserSchema = z
	.object({
		id: z.any(),
		statut: z.any(),
		employee: z.any(),
		civility_code: z.any(),
		gender: z.any(),
		birth: z.any(),
		email: z.any(),
		personal_email: z.any(),
		socialnetworks: z.array(z.any()),
		job: z.any(),
		signature: z.any(),
		address: z.any(),
		zip: z.any(),
		town: z.any(),
		state_id: z.any(),
		office_phone: z.any(),
		office_fax: z.any(),
		user_mobile: z.any(),
		personal_mobile: z.any(),
		admin: z.any(),
		login: z.any(),
		entity: z.any(),
		datec: z.any(),
		datem: z.any(),
		socid: z.any(),
		contact_id: z.any(),
		fk_member: z.any(),
		fk_user: z.any(),
		fk_user_expense_validator: z.any(),
		fk_user_holiday_validator: z.any(),
		clicktodial_url: z.any(),
		clicktodial_login: z.any(),
		clicktodial_poste: z.any(),
		datelastlogin: z.any(),
		datepreviouslogin: z.any(),
		iplastlogin: z.any(),
		ippreviouslogin: z.any(),
		datestartvalidity: z.any(),
		dateendvalidity: z.any(),
		photo: z.any(),
		lang: z.any(),
		rights: z.object({
			user: z
				.object({
					user: z.any(),
					self: z.any(),
					user_advance: z.any(),
					self_advance: z.any(),
					group_advance: z.any(),
				})
				.partial(),
		}),
		user_group_list: z.any(),
		conf: z.any(),
		users: z.array(z.any()),
		parentof: z.any(),
		accountancy_code: z.any(),
		thm: z.any(),
		tjm: z.any(),
		salary: z.any(),
		salaryextra: z.any(),
		weeklyhours: z.any(),
		color: z.any(),
		dateemployment: z.any(),
		dateemploymentend: z.any(),
		default_c_exp_tax_cat: z.any(),
		ref_employee: z.any(),
		national_registration_number: z.any(),
		default_range: z.any(),
		fk_warehouse: z.any(),
		import_key: z.any(),
		array_options: z.array(z.any()),
		array_languages: z.any(),
		contacts_ids: z.any(),
		linked_objects: z.any(),
		linkedObjectsIds: z.any(),
		canvas: z.any(),
		fk_project: z.any(),
		user: z.any(),
		origin: z.any(),
		origin_id: z.any(),
		ref: z.any(),
		ref_ext: z.any(),
		status: z.any(),
		country_id: z.any(),
		country_code: z.any(),
		region_id: z.any(),
		barcode_type: z.any(),
		barcode_type_coder: z.any(),
		mode_reglement_id: z.any(),
		cond_reglement_id: z.any(),
		demand_reason_id: z.any(),
		transport_mode_id: z.any(),
		last_main_doc: z.any(),
		fk_bank: z.any(),
		fk_account: z.any(),
		note_public: z.any(),
		note_private: z.any(),
		name: z.any(),
		lastname: z.any(),
		firstname: z.any(),
		civility_id: z.any(),
		date_creation: z.any(),
		date_validation: z.any(),
		date_modification: z.any(),
		date_cloture: z.any(),
		user_author: z.any(),
		user_creation: z.any(),
		user_creation_id: z.any(),
		user_valid: z.any(),
		user_validation: z.any(),
		user_validation_id: z.any(),
		user_closing_id: z.any(),
		user_modification: z.any(),
		user_modification_id: z.any(),
		specimen: z.any(),
		liste_limit: z.any(),
	})
	.partial()
	.catchall(z.any())

export interface User extends z.infer<typeof UserSchema> {}
